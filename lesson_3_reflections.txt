When would you want to create a remote repository rather than keeping all your
work local?

  It is always nice to have a backup of your work. Also, putting your work remote
  (on GitHub) makes it easier to share your work.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

  Pulling your changes in manually allows you to control when/how to keep your
  local files up-to-date. Having Git do this automatically could cause you to
  have more commits/versions than you may want.

Describe the differences between forks, clones, and branches. When would you use
one instead of another?

  A clone is basically making a copy of a repository either on your local computer
  or on GitHub (or both). A fork is similar to a clone, but you only fork
  repository's that you do not have permissions to edit. So you would typically
  be "forking" someone else's repository. A branch is a new "leg" of your project.
  For example, your master branch will almost always be your main project. But you
  can still have other branches that move away from your master project so that
  you can make changes that will not affect your master project until you have
  perfected your changes and it is ready to be implemented.

What is the benefit of having a copy of the last known state of the remote
stored locally?

  This is always a good idea in case you need to restore your project to
  previous version. For example, you broke your code to a "point of no return"
  and it would be easier to start back from that point rather than try to fix it
  yourself.

How would you collaborate without using Git or GitHub? What would be easier, and
what would be harder?

  I guess this all depends on who you were working and if you worked in the same
  office or not. Most communication lately with co-workers happens via email. So
  I would assume that this would be the most common for a communication between
  co-workers without Git or GitHub. I think that both forms are pretty equal in
  difficulty. GitHub sends an email with a link for the user to view some
  proposed changes which you could also manually do in a manually created email.
  However, it is definitely nice how Git and Github work to take some of the
  manual effort out.

When would you want to make changes in a separate branch rather than directly in
master? What benefits does each approach have?

  You would want to have a separate branch when collaborating changes that more
  than one user is making. This allows for multiple changes to be made without
  affecting your master branch. It also makes it easy to confirm everyones changes
  and then merge all of the finished changes into master at the end. You can still
  perform this collaboration on your master branch, but every change will affect
  your product which can be a good or bad thing. If a change breaks your main
  branch it may cause critical impact that will need fixing asap. But it can also
  be a good thing if you want your change to directly affect your main product.
